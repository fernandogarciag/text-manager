{"version":3,"sources":["components/styles.js","components/App.js","index.js"],"names":["Container","styled","div","App","useState","list","setList","id","name","multiple","map","element","index","value","classname","onClick","e","preventDefault","newValue","prompt","addElement","listCopy","select","document","getElementById","Object","entries","selectedOptions","length","splice","deleteElement","ReactDOM","render","StrictMode"],"mappings":"wMAIaA,E,MAAYC,EAAOC,IAAV,qjB,OCmCPC,MApCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAsBA,OACE,eAACN,EAAD,WACE,wBAAQO,GAAG,UAAUC,KAAK,UAAUC,UAAQ,EAA5C,SACGJ,EAAKK,KAAI,SAACC,EAASC,GAAV,OAAqB,wBAAQC,MAAOD,EAAf,SAAmCD,GAARC,QAE5D,sBAAKE,UAAU,UAAf,UACA,wBAAQC,QAAS,SAACC,GAAD,OA3BF,SAACA,GAClBA,EAAEC,iBACF,IAAMC,EAAWC,OAAO,8BACpBD,GACFZ,EAAQ,GAAD,mBACFD,GADE,CAELa,KAqBsBE,CAAWJ,IAAnC,iBACA,wBAAQD,QAAS,SAACC,GAAD,OAlBC,SAACA,GACrBA,EAAEC,iBACF,IAAII,EAAQ,YAAOhB,GACbiB,EAASC,SAASC,eAAe,WACvC,GAAIC,OAAOC,QAAQJ,EAAOK,iBAAiBC,OAAQ,CACjD,IAAK,IAAIhB,EAAQa,OAAOC,QAAQJ,EAAOK,iBAAiBC,OAAS,EAAGhB,GAAS,EAAGA,IAC9ES,EAASQ,OAAOJ,OAAOC,QAAQJ,EAAOK,iBAAiBf,GAAO,GAAGC,MAAM,GAEzEP,EAAQ,YAAIe,KAUYS,CAAcd,IAAtC,wBC5BNe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFV,SAASC,eAAe,W","file":"static/js/main.d59863d5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n// const colorRed = \"#c00000\";\n\nexport const Container = styled.div`\n    width: 100%;\n    max-width: 1440px;\n    min-height: 100vh;\n    background-color: #d7d7d7;\n    margin: 0 auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    select {\n        min-height: 200px;\n        height: 50vh;\n        min-width: 150px;\n        margin-right: 30px\n    }\n    button {\n        width: 50px;\n        height: 50px;\n        display: block;\n        font-size: 1.5rem;\n        margin-bottom: 20px;\n        border: #000dc0 1px solid;\n        border-radius: 10px;\n    }\n`;","import { useState } from \"react\";\nimport { Container } from \"./styles\";\n\nfunction App() {\n  const [list, setList] = useState([]);\n  const addElement = (e) => {\n    e.preventDefault();\n    const newValue = prompt(\"Nuevo valor para la cadena\");\n    if (newValue) {\n      setList([\n        ...list,\n        newValue\n      ])\n    }\n  }\n  const deleteElement = (e) => {\n    e.preventDefault();\n    let listCopy = [...list];\n    const select = document.getElementById('element');\n    if (Object.entries(select.selectedOptions).length) {\n      for (let index = Object.entries(select.selectedOptions).length - 1; index >= 0; index--) {\n        listCopy.splice(Object.entries(select.selectedOptions)[index][1].value,1);\n      }\n      setList([...listCopy]);\n    }\n  }\n  return (\n    <Container>\n      <select id=\"element\" name=\"element\" multiple>\n        {list.map((element, index) => (<option value={index} key={index}>{element}</option>))}\n      </select>\n      <div classname=\"buttons\">\n      <button onClick={(e) => addElement(e)}> + </button>\n      <button onClick={(e) => deleteElement(e)}> - </button>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}